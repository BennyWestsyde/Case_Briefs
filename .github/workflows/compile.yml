name: Build and Package CaseBriefs App (PyInstaller)

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

permissions:
  contents: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: macos-13
            arch: x86_64
          - os: macos-14
            arch: arm64
          - os: windows-latest
            arch: x86_64
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pyinstaller

      - name: Build with PyInstaller
        shell: bash
        run: |
          pyinstaller CaseBriefs.spec
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            test -d dist/CaseBriefs.app
          else
            test -f "dist/CaseBriefs/CaseBriefs.exe"
          fi

      - name: Package macOS app
        if: startsWith(matrix.os, 'macos-')
        shell: bash
        run: |
          cd dist
          ditto -c -k --sequesterRsrc --keepParent "CaseBriefs.app" \
            "CaseBriefs-${{ matrix.os }}-${{ matrix.arch }}.zip"

      - name: Package Windows app
        if: startsWith(matrix.os, 'windows')
        shell: pwsh
        run: |
          Compress-Archive -Path "dist/CaseBriefs/*" `
            -DestinationPath "dist/CaseBriefs-${{ matrix.os }}-${{ matrix.arch }}.zip" -Force

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: CaseBriefs-${{ matrix.os }}-${{ matrix.arch }}
          path: dist/CaseBriefs-${{ matrix.os }}-${{ matrix.arch }}.zip
          if-no-files-found: error

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4

      - name: Create tag if missing
        run: |
          TAG='${{ inputs.version }}'
          if git ls-remote --tags origin | grep -q "refs/tags/${TAG}$"; then
            echo "Tag ${TAG} exists."
          else
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git tag -a "${TAG}" -m "Release ${TAG}"
            git push origin "${TAG}"
          fi

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create GitHub Release (or update if exists)
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ inputs.version }}
          release_name: CaseBriefs ${{ inputs.version }}
          body: |
            Universal macOS build artifacts generated by PyInstaller.

            Included builds:
              Macos:
                - x86_64: CaseBriefs-x86_64.zip   (Apple Intel Macs)
                - arm64:  CaseBriefs-arm64.zip    (Apple Silicon: M1/M2/etc)
              Windows:
                - x86_64: CaseBriefs-x86_64.zip   (Windows 64-bit)
          draft: false
          prerelease: false
          

      - name: Upload macOS x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/CaseBriefs-macos-13-x86_64/CaseBriefs-macos-13-x86_64.zip
          asset_name: CaseBriefs-macos-x86_64.zip
          asset_content_type: application/zip

      - name: Upload macOS arm64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/CaseBriefs-macos-14-arm64/CaseBriefs-macos-14-arm64.zip
          asset_name: CaseBriefs-macos-arm64.zip
          asset_content_type: application/zip

      - name: Upload Windows x86_64
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/CaseBriefs-windows-latest-x86_64/CaseBriefs-windows-latest-x86_64.zip
          asset_name: CaseBriefs-windows-x86_64.zip
          asset_content_type: application/zip